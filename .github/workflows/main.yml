name: Main Workflow

on:
  push:
    branches:
      - main
  pull_request:

env:
  CARGO_TERM_COLOR: always

jobs:
  ci:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install 1.81.0 toolchain
        uses: dtolnay/rust-toolchain@1.81.0
        with:
          components: clippy, rustfmt

      - name: Cache Rust dependencies
        uses: Swatinem/rust-cache@v2

      - name: Download SurrealDB
        run: curl --proto '=https' --tlsv1.2 -sSf https://install.surrealdb.com | sh

      - name: Run SurrealDB root
        run: surreal start --user root --pass root memory --allow-experimental record_references &

      - name: Run SurrealDB admin
        run: surreal start --user admin --pass admin --bind 0.0.0.0:8001 memory --allow-experimental record_references &

      - name: Run check
        run: cargo check --all

      - name: Run tests
        run: cargo test --all-features

      - name: Run format
        run: |
          cargo check --all
          cargo fix

      - name: Run lint
        run: cargo clippy -- -Dwarnings

  coverage:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install 1.81.0 toolchain
        uses: dtolnay/rust-toolchain@1.81.0
        with:
          components: llvm-tools-preview

      - name: Cache Rust dependencies
        uses: Swatinem/rust-cache@v2

      - name: Download SurrealDB
        run: curl --proto '=https' --tlsv1.2 -sSf https://install.surrealdb.com | sh

      - name: Run SurrealDB root
        run: surreal start --user root --pass root memory --allow-experimental record_references &

      - name: Run SurrealDB admin
        run: surreal start --user admin --pass admin --bind 0.0.0.0:8001 memory --allow-experimental record_references &

      - uses: taiki-e/install-action@cargo-llvm-cov
      - uses: taiki-e/install-action@nextest

      - name: Collect coverage data (including doctests)
        run: |
          cargo llvm-cov --no-report nextest --all-features --test-threads=1
          # cargo llvm-cov --no-report --doc
          cargo llvm-cov report --doctests --lcov --output-path lcov.info

      - name: Upload test results to Codecov
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: lcov.info

      - name: Archive code coverage results
        uses: actions/upload-artifact@v4
        with:
          name: code-coverage-report
          path: lcov.info

  docs:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install 1.81.0 toolchain
        uses: dtolnay/rust-toolchain@1.81.0

      - name: Cache Rust dependencies
        uses: Swatinem/rust-cache@v2

      - name: Build documentation
        run: cargo doc

  cargo-deny:
    name: cargo-deny
    runs-on: ubuntu-latest
    strategy:
      matrix:
        checks:
          - advisories
          - bans licenses sources

    # Prevent sudden announcement of a new advisory from failing ci:
    continue-on-error: ${{ matrix.checks == 'advisories' }}

    steps:
      - uses: actions/checkout@v3

      - uses: EmbarkStudios/cargo-deny-action@v1
        with:
          command: check ${{ matrix.checks }}
